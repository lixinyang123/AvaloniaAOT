<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>WinExe</OutputType>
        <TargetFramework>net9.0</TargetFramework>
        <Nullable>enable</Nullable>
        <TrimMode>copyused</TrimMode>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
        <!--Public AOT-->
        <PublishAot>true</PublishAot>
        <InvariantGlobalization>true</InvariantGlobalization>
        <StripSymbols>true</StripSymbols>
        <NoWarn>IL2057;IL2026;IL2104;IL3053</NoWarn>
    </PropertyGroup>
	
    <ItemGroup>
		<Content Include=".ReflectionDefine\**" />
		<AvaloniaResource Include="Assets\**" />
        <None Remove=".gitignore" />
    </ItemGroup>
	
	<!--AOT Reflection Define-->
	<ItemGroup>
		<TrimmerRootDescriptor Include=".ReflectionDefine\Avalonia.xml" />
	</ItemGroup>

	<ItemGroup>
        <!--This helps with theme dll-s trimming.
        If you will publish your application in self-contained mode with p:PublishTrimmed=true and it will use Fluent theme Default theme will be trimmed from the output and vice versa.
        https://github.com/AvaloniaUI/Avalonia/issues/5593 -->
        <TrimmableAssembly Include="Avalonia.Themes.Fluent" />
        <TrimmableAssembly Include="Avalonia.Themes.Default" />
    </ItemGroup>
	
    <ItemGroup>
        <PackageReference Include="Avalonia" Version="11.2.7" />
        <PackageReference Include="Avalonia.Desktop" Version="11.2.7" />
        <!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
        <PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.2.5" />
        <PackageReference Include="Avalonia.ReactiveUI" Version="11.2.5" />
        <PackageReference Include="Avalonia.Themes.Fluent" Version="11.2.5" />
        <PackageReference Include="Avalonia.Fonts.Inter" Version="11.2.5" />
        <!--Compresse with UPX-->
        <!-- <PackageReference Include="PublishAotCompressed" Version="1.0.3" /> -->
    </ItemGroup>
</Project>
